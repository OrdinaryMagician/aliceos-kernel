#!/bin/zsh
CFLAGS="-m32 -march=i486 -DAOSX86 -std=c99 -Os -pipe -Wall -Wextra -Werror \
	-pedantic -nostdlib -nostdinc -fno-stack-protector -finline-functions \
	-ffreestanding -funsigned-char -fpack-struct \
	-Wno-unused-function -Wno-unused-parameter -Ikernel/include"
AFLAGS="-felf32"
LFLAGS="-melf_i386 -Tkernel/linkx86.ld"
NAME="vmaliceos"
BINFILES=( ${KERNEL} ${RDISK} )
SOURCES=( kernel/*.{s,c} kernel/aos/**/*.{s,c} )
SOURCESO=${SOURCES//%.(s|c)/.o}
CC="clang"
AS="nasm"
LD="ld"
RM="rm"
aos_compile()
{
 [ -e "$2" ] &&
  [ $(stat -c %Y "$1") -le $(stat -c %Y "$2") ] &&
  return true
 CHANGED=1
 if [[ ! -z "${f#*.s}" ]]
  then
   echo -e "\e[1;32m[CC]\e[0m" $(basename "$1") "->" $(basename "$2")
   ${CC} ${=CFLAGS} -c -o "$2" "$1"
   return $?
  else
   echo -e "\e[1;32m[AS]\e[0m" $(basename "$1") "->" $(basename "$2")
   ${AS} ${=AFLAGS} -o "$2" "$1"
   return $?
 fi
}
aos_clean()
{
 [ ! -e "$1" ] &&
  return true
 CHANGED=1
 echo -e "\e[1;32m[RM]\e[0m" $(basename "$1")
 ${RM} "$1"
 return $?
}
aos_link()
{
 [ ${CHANGED} -eq 0 ] &&
  echo "\e[1;32mEverything is already up to date.\e[0m" &&
  exit 0
 echo -e "\e[1;32m[LD]\e[0m" ${NAME}
 ${LD} ${=LFLAGS} -o "${NAME}" ${=SOURCESO}
 return $?
}
CHANGED=0
if [[ "$1" == "clean" ]]
 then
  for f in "${SOURCES[@]}"
   do
    aos_clean "${f/%.(s|c)/.o}"
   done
  [ ${CHANGED} -eq 0 ] &&
   echo "\e[1;32mNothing to clean.\e[0m"
  exit 0
 fi
for f in "${SOURCES[@]}"
 do
  ! aos_compile "${f}" "${f/%.(s|c)/.o}" &&
   echo -e "\e[1;31mErrors occured when building\e[0m" >&2 &&
   exit 1
 done
aos_link